{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/innoscripta/news-aggregator-frontend/src/pages/Preferences/Preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Select, message } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./preferance.scss\";\nimport apiRequest from '../../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preferences() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [sources, setSources] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedSources, setSelectedSources] = useState([]);\n  const [selectedAuthors, setSelectedAuthors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [userHasPreferences, setUserHasPreferences] = useState(false);\n  const token = JSON.parse(localStorage.getItem(\"access_token\"));\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPreferences = async () => {\n      setIsLoading(true);\n      try {\n        const res = await apiRequest.get(\"/preferences/all\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          preferences\n        } = res.data;\n        const categoryOptions = preferences.categories.map(category => ({\n          value: category.id,\n          label: category.name\n        }));\n        const sourceOptions = preferences.sources.map(source => ({\n          value: source.id,\n          label: source.name\n        }));\n        const authorOptions = preferences.authors.filter(author => author && author.trim() !== \"\").map(author => ({\n          value: author,\n          label: author\n        }));\n        setCategories(categoryOptions);\n        setSources(sourceOptions);\n        setAuthors(authorOptions);\n        setIsLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching preferences:\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPreferences();\n  }, [token]);\n  useEffect(() => {\n    const fetchUserPreferences = async () => {\n      try {\n        var _userPreferencesRes$d;\n        // fetch user's selected preferences\n        const userPreferencesRes = await apiRequest.get(\"/preferences\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const userPreferences = ((_userPreferencesRes$d = userPreferencesRes.data.preferences) === null || _userPreferencesRes$d === void 0 ? void 0 : _userPreferencesRes$d.settings) || {};\n        const selectedCategoryNames = categories.filter(category => {\n          var _userPreferences$cate;\n          return (_userPreferences$cate = userPreferences.category_ids) === null || _userPreferences$cate === void 0 ? void 0 : _userPreferences$cate.includes(String(category.value));\n        }).map(category => category.value);\n        const selectedSourceNames = sources.filter(source => {\n          var _userPreferences$sour;\n          return (_userPreferences$sour = userPreferences.source_ids) === null || _userPreferences$sour === void 0 ? void 0 : _userPreferences$sour.includes(String(source.value));\n        }).map(source => source.value);\n        setSelectedCategories(selectedCategoryNames || []);\n        setSelectedSources(selectedSourceNames || []);\n        setSelectedAuthors(userPreferences.authors || []);\n        const hasPreferences = userPreferences.category_ids && userPreferences.category_ids.length > 0 || userPreferences.source_ids && userPreferences.source_ids.length > 0 || userPreferences.authors && userPreferences.authors.length > 0;\n        setUserHasPreferences(hasPreferences);\n      } catch (err) {\n        console.error(\"Error fetching user preferences:\", err);\n      }\n    };\n    fetchUserPreferences();\n  }, [token, categories, sources]);\n  const handleCategoryChange = value => {\n    setSelectedCategories(value);\n  };\n  const handleSourceChange = value => {\n    setSelectedSources(value);\n  };\n  const handleAuthorChange = value => {\n    setSelectedAuthors(value);\n  };\n  const handleSubmit = async () => {\n    if (selectedCategories.length === 0 && selectedSources.length === 0 && selectedAuthors.length === 0) {\n      message.error(\"Please select at least one preference i.e (category, source, author)\");\n      return;\n    }\n    setError(\"\");\n    const formData = new FormData();\n    selectedCategories.forEach(category => {\n      formData.append('categories[]', category);\n    });\n    selectedSources.forEach(source => {\n      formData.append('sources[]', source);\n    });\n    selectedAuthors.forEach(author => {\n      formData.append('authors[]', author);\n    });\n    try {\n      setIsLoading(true);\n      const res = await apiRequest.post(\"/preferences\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (res.status === 200) {\n        message.success(res.data.message);\n        navigate(\"/\");\n      } else {\n        message.error(\"Failed to save preferences\");\n        setError(\"Failed to save preferences\");\n      }\n    } catch (error) {\n      console.error(\"Error saving preferences:\", error);\n      message.error(\"Failed to save preferences\");\n      setError(\"An error occurred while saving preferences\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preferance\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: \"Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectors\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Select Categories\",\n            onChange: handleCategoryChange,\n            filterOption: (input, option) => option.label.toLowerCase().includes(input.toLowerCase()),\n            options: categories,\n            loading: isLoading,\n            value: selectedCategories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Sources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Select sources\",\n            onChange: handleSourceChange,\n            filterOption: (input, option) => option.label.toLowerCase().includes(input.toLowerCase()),\n            options: sources,\n            loading: isLoading,\n            value: selectedSources\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Authors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Select Authors\",\n            onChange: handleAuthorChange,\n            filterOption: (input, option) => option.label.toLowerCase().includes(input.toLowerCase()),\n            options: authors,\n            loading: isLoading,\n            value: selectedAuthors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"skip\",\n            children: userHasPreferences ? \"Cancel\" : \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 34\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"primary\",\n          onClick: handleSubmit,\n          style: {\n            marginTop: \"20px\"\n          },\n          loading: isLoading,\n          children: [\" \", userHasPreferences ? \"Update\" : \"Submit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(Preferences, \"yGVlMxhIf9n7P8mD/XKw46XVPVM=\", false, function () {\n  return [useNavigate];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useEffect","useState","Select","message","useNavigate","apiRequest","jsxDEV","_jsxDEV","Preferences","_s","categories","setCategories","sources","setSources","authors","setAuthors","selectedCategories","setSelectedCategories","selectedSources","setSelectedSources","selectedAuthors","setSelectedAuthors","isLoading","setIsLoading","error","setError","userHasPreferences","setUserHasPreferences","token","JSON","parse","localStorage","getItem","navigate","fetchPreferences","res","get","headers","Authorization","preferences","data","categoryOptions","map","category","value","id","label","name","sourceOptions","source","authorOptions","filter","author","trim","err","console","fetchUserPreferences","_userPreferencesRes$d","userPreferencesRes","userPreferences","settings","selectedCategoryNames","_userPreferences$cate","category_ids","includes","String","selectedSourceNames","_userPreferences$sour","source_ids","hasPreferences","length","handleCategoryChange","handleSourceChange","handleAuthorChange","handleSubmit","formData","FormData","forEach","append","post","status","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","style","width","placeholder","onChange","filterOption","input","option","toLowerCase","options","loading","color","href","type","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/innoscripta/news-aggregator-frontend/src/pages/Preferences/Preferences.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Select, message } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./preferance.scss\"\nimport apiRequest from '../../lib/api';\n\nfunction Preferences() {\n    const [categories, setCategories] = useState([]);\n    const [sources, setSources] = useState([]);\n    const [authors, setAuthors] = useState([]);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n    const [selectedSources, setSelectedSources] = useState([]);\n    const [selectedAuthors, setSelectedAuthors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [userHasPreferences, setUserHasPreferences] = useState(false);\n    const token = JSON.parse(localStorage.getItem(\"access_token\"));\n    const navigate = useNavigate();\n\n\n\n    useEffect(() => {\n        const fetchPreferences = async () => {\n            setIsLoading(true);\n            try {\n\n                const res = await apiRequest.get(\"/preferences/all\", {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n\n                const { preferences } = res.data;\n\n                const categoryOptions = preferences.categories.map((category) => ({\n                    value: category.id,\n                    label: category.name,\n                }));\n\n                const sourceOptions = preferences.sources.map((source) => ({\n                    value: source.id,\n                    label: source.name,\n                }));\n\n                const authorOptions = preferences.authors\n                .filter((author) => author && author.trim() !== \"\")\n                .map((author) => ({\n                    value: author,\n                    label: author,\n                }));\n\n                setCategories(categoryOptions);\n                setSources(sourceOptions);\n                setAuthors(authorOptions);\n                setIsLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching preferences:\", err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchPreferences();\n    }, [token]);\n\n    useEffect(() => {\n        const fetchUserPreferences = async () => {\n        try {\n\n            // fetch user's selected preferences\n            const userPreferencesRes = await apiRequest.get(\"/preferences\", {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            const userPreferences = userPreferencesRes.data.preferences?.settings || {};\n            const selectedCategoryNames = categories\n                .filter((category) => userPreferences.category_ids?.includes(String(category.value)))\n                .map((category) => category.value);\n\n            const selectedSourceNames = sources\n                .filter((source) => userPreferences.source_ids?.includes(String(source.value)))\n                .map((source) => source.value);\n\n            setSelectedCategories(selectedCategoryNames || []);\n            setSelectedSources(selectedSourceNames || []);\n            setSelectedAuthors(userPreferences.authors || []);\n\n            const hasPreferences = (\n                (userPreferences.category_ids && userPreferences.category_ids.length > 0) ||\n                (userPreferences.source_ids && userPreferences.source_ids.length > 0) ||\n                (userPreferences.authors && userPreferences.authors.length > 0)\n            );\n            setUserHasPreferences(hasPreferences);\n        } catch (err) {\n            console.error(\"Error fetching user preferences:\", err);\n        }\n        };\n        \n        fetchUserPreferences();\n    }, [token, categories, sources]);\n          \n            \n   \n\n    const handleCategoryChange = (value) => {\n        setSelectedCategories(value);\n    };\n\n    const handleSourceChange = (value) => {\n        setSelectedSources(value);\n    };\n\n    const handleAuthorChange = (value) => {\n        setSelectedAuthors(value);\n    };\n   \n    const handleSubmit = async () => {\n        \n        if (\n            selectedCategories.length === 0 &&\n            selectedSources.length === 0 &&\n            selectedAuthors.length === 0\n        ) {\n            message.error(\"Please select at least one preference i.e (category, source, author)\")\n            return;\n        }\n    \n        setError(\"\");\n    \n        const formData = new FormData();\n    \n        selectedCategories.forEach((category) => {\n            formData.append('categories[]', category);\n        });\n    \n        selectedSources.forEach((source) => {\n            formData.append('sources[]', source);\n        });\n    \n        selectedAuthors.forEach((author) => {\n            formData.append('authors[]', author);\n        });\n        try {\n            setIsLoading(true);\n            const res = await apiRequest.post(\"/preferences\", formData, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"multipart/form-data\", \n                },\n            });\n    \n            if (res.status === 200) {\n                message.success(res.data.message)\n                navigate(\"/\")\n            } else {\n                message.error(\"Failed to save preferences\")\n                setError(\"Failed to save preferences\");\n            }\n        } catch (error) {\n            console.error(\"Error saving preferences:\", error);\n            message.error(\"Failed to save preferences\")\n            setError(\"An error occurred while saving preferences\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n\n    return (\n        <div className='preferance'>\n            <div className='container'>\n                <div className='heading'>Preferences</div>\n                <div className=\"selectors\">\n                    <div className=\"selector\">\n                        <p>Select Category</p>\n                        <Select\n                            mode=\"multiple\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Select Categories\"\n                            onChange={handleCategoryChange}\n                            filterOption={(input, option) =>\n                                option.label.toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={categories}\n                            loading={isLoading}\n                            value={selectedCategories}\n                        />\n                    </div>\n                    <div className=\"selector\">\n                        <p>Select Sources</p>\n                        <Select\n                            mode=\"multiple\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Select sources\"\n                            onChange={handleSourceChange}\n                            filterOption={(input, option) =>\n                                option.label.toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={sources}\n                            loading={isLoading}\n                            value={selectedSources}\n                        />\n                    </div>\n                    <div className=\"selector\">\n                        <p>Select Authors</p>\n                        <Select\n                            mode=\"multiple\"\n                            style={{ width: \"100%\" }}\n                            placeholder=\"Select Authors\"\n                            onChange={handleAuthorChange}\n                            filterOption={(input, option) =>\n                                option.label.toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={authors}\n                            loading={isLoading}\n                            value={selectedAuthors}\n                        />\n                    </div>\n                </div>\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n                <div className='buttons'>\n                    <a href='/'> <button className='skip'>{userHasPreferences ? \"Cancel\" : \"Skip\"}</button> </a>\n                    <button\n                      type=\"primary\"\n                      onClick={handleSubmit}\n                      style={{ marginTop: \"20px\" }}\n                      loading={isLoading}\n                    > {userHasPreferences ? \"Update\" : \"Submit\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Preferences;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}